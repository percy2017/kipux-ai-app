// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                 Int                @id @default(autoincrement())
  email              String             @unique
  password           String
  name               String?
  phone              String
  avatarUrl          String?
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  conversations      Conversation[]
  userSubscription   UserSubscription?
  messages           Message[]

  // User settings
  apiKey             String?
  liteLLMUrl         String?
  theme              String?            @default("system")
  defaultModel       String?            @default("gpt-4o-mini")
}

model SubscriptionPlan {
  id                 Int                @id @default(autoincrement())
  name               String             @unique
  price              Float
  features           Json
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  userSubscriptions  UserSubscription[]
}

model UserSubscription {
  id                 Int                @id @default(autoincrement())
  userId             Int                @unique
  user               User               @relation(fields: [userId], references: [id])
  subscriptionPlanId Int
  subscriptionPlan   SubscriptionPlan   @relation(fields: [subscriptionPlanId], references: [id])
  startDate          DateTime
  endDate            DateTime
  status             String // e.g., "active", "canceled", "expired"
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}

model Conversation {
  id                 Int                @id @default(autoincrement())
  userId             Int
  user               User               @relation(fields: [userId], references: [id])
  title              String
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  messages           Message[]
}

model Message {
  id                 Int                @id @default(autoincrement())
  conversationId     Int
  conversation       Conversation       @relation(fields: [conversationId], references: [id])
  userId             Int?               // Hacerlo opcional si un mensaje puede no tener un usuario directo (ej. mensajes del sistema)
  user               User?              @relation(fields: [userId], references: [id])
  role               String             // "user" or "assistant"
  content            String
  createdAt          DateTime           @default(now())
}
